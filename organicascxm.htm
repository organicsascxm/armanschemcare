<!DOCTYPE html>
<html lang="bn">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Arman's Care</title>
<style>
  body {
    font-family: 'Segoe UI', sans-serif;
    background: #004d4d;
    padding: 20px;
    color: #fff;
  }
  .container {
    max-width: 800px;
    margin: auto;
    background: #111;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 15px rgba(0,0,0,0.5);
  }
  h1 {
    text-align: center;
    margin-bottom: 10px;
    color: white;
  }
  h1 span {
    color: Magenta;
    font-weight: bold;
    font-style: italic;
  }
  .info-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 20px 0;
    font-weight: bold;
    color: #ff8c00; /* Deep Orange */
    position: relative;
  }
  .info-left { position: absolute; left: 0; }
  .info-center { margin: 0 auto; }
  .info-right { position: absolute; right: 0; }
  .timer {
    font-size: 24px;
    font-weight: bold;
    color: #ff8c00;
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9999;
  }
  .timer.red { color: red; }
  .shake {
    animation: shake 0.5s infinite;
  }
  @keyframes shake {
    0%, 100% { transform: translateX(-50%) rotate(0deg); }
    25% { transform: translateX(-50%) rotate(3deg); }
    75% { transform: translateX(-50%) rotate(-3deg); }
  }
  .instructions, .question-box, #resultBox {
    background: #222;
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 20px;
    font-weight: bold;
  }
  .question-box { background: #333; }
  .question-box p { color: yellow; }
  .options label {
    display: block;
    margin: 8px 0;
    cursor: pointer;
    color: pink;
  }
  .correct { color: green; }
  .incorrect { color: red; }
  .explanation {
    background: #00ffff;
    color: black;
    padding: 10px;
    border-left: 4px solid #1890ff;
    margin-top: 10px;
    border-radius: 4px;
  }
  button {
    background: #6c5ce7;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    font-weight: bold;
    margin-top: 10px;
  }

  /* Added CSS for input and name container */
  input[type="text"] {
    width: 100%;
    max-width: 700px; /* ‡¶¨‡¶ï‡ßç‡¶∏‡ßá‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶¶‡ßà‡¶∞‡ßç‡¶ò‡ßç‡¶Ø */
    padding: 10px 15px;
    font-size: 16px;
    border-radius: 6px;
    border: 1px solid #ccc;
    box-sizing: border-box;
    display: block;
    margin: 0 auto; /* ‡¶Æ‡¶æ‡¶ù‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø */
  }
  .name-container {
    text-align: center;
    margin-top: 20px;
  }
</style>
</head>
<body>

<!-- Name Entry -->
<div class="container" id="nameEntry">
  <h1><span>ARMAN'S CHEMISTRY CARE</span> - <span style="color:white"> Organic Chemistry Exam</span></h1>

  <div class="name-container">
    <input type="text" id="nameInput" placeholder="Enter your name to start..." />
  </div>

  <br />
  <button onclick="startExam()">Start Exam</button>
</div>

<!-- Exam Section -->
<div class="container" id="examContainer" style="display:none;">
  <h1><span>ARMAN'S CHEMISTRY CARE</span> - <span style="color:white"> Organic Chemistry Exam </span></h1>

  <div class="info-header">
    <div class="info-left"><strong>Full Marks:</strong> 15</div>
    <div class="info-center"><strong>Total Questions:</strong> 15</div>
    <div class="info-right"><strong>Time:15 Minutes</strong> <span class="timer" id="timer">15:00</span></div>
  </div>

  <div class="instructions">
    <strong>Instructions:</strong>
    <ol>
      <li>Choose the correct option for each question.</li>
      <li>Each correct answer carries 1 mark.</li>
      <li>0.25 mark will be deducted for each incorrect answer.</li>
      <li>Timer is 15 minutes. Submit before time ends.</li>
    </ol>
  </div>

  <div id="exam"></div>
  <button onclick="submitExam()">Submit & View Result</button>
  <div id="resultBox"></div>
</div>

<!-- MathJax -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML" async></script>

<!-- Audio Elements -->
<audio id="startSound" src="https://actions.google.com/sounds/v1/cartoon/wood_plank_flicks.ogg"></audio>
<audio id="countdownSound" src="https://actions.google.com/sounds/v1/alarms/beep_short.ogg"></audio>
<audio id="bellSound" src="https://actions.google.com/sounds/v1/alarms/bugle_tune.ogg"></audio>

<script type="module">
import { initializeApp } from "https://www.gstatic.com/firebasejs/12.1.0/firebase-app.js";
import { getDatabase, ref, push } from "https://www.gstatic.com/firebasejs/12.1.0/firebase-database.js";

const firebaseConfig = {
  apiKey: "AIzaSyDwPxMPs04lWYa71z7ANYHfczbJgNxQwxg",
  authDomain: "leaderboard-7f122.firebaseapp.com",
  databaseURL: "https://leaderboard-7f122-default-rtdb.firebaseio.com",
  projectId: "leaderboard-7f122",
  storageBucket: "leaderboard-7f122.firebasestorage.app",
  messagingSenderId: "143943365463",
  appId: "1:143943365463:web:993d3bcaee88411e5c4412",
  measurementId: "G-6BMD7LQQ1B"
};

const app = initializeApp(firebaseConfig);
const db = getDatabase(app);

let userName = ""; 
let startTime; 
let timerInterval;
let timerDuration = 15 * 60;

const nameEntry = document.getElementById("nameEntry");
const examContainer = document.getElementById("examContainer");
const timerElement = document.getElementById("timer");



const questions = [
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßß:<br>‡ßß,‡ß®-‡¶°‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡ßã‡¶á‡¶•‡ßá‡¶®‡¶ï‡ßá Zn/‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßã‡¶π‡¶≤ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶ó‡¶∞‡¶Æ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶® ‡¶π‡¶¨‡ßá ‚Äî`,
    options: ["‡¶ï) ‡¶á‡¶•‡¶ø‡¶®", "‡¶ñ) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶ü‡¶ø‡¶≤‡¶ø‡¶®", "‡¶ó) ‡¶á‡¶•‡ßá‡¶®", "‡¶ò) ‡ßß-‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡ßã‡¶á‡¶•‡¶ø‡¶®"],
    correct: 1,
    explanation: `üß† ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:<br>‡ßß,‡ß®-‡¶°‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡ßã‡¶á‡¶•‡ßá‡¶® ‡¶•‡ßá‡¶ï‡ßá Zn ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßã‡¶π‡¶≤‡ßá ‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã‡¶ú‡ßá‡¶®‡ßá‡¶∞ ‡¶°‡¶æ‡¶¨‡¶≤ ‡¶è‡¶≤‡¶ø‡¶Æ‡¶ø‡¶®‡ßá‡¶∂‡¶® ‡¶ò‡¶ü‡ßá ‚Üí ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶ü‡¶ø‡¶≤‡¶ø‡¶® (HC‚â°CH) ‡¶â‡ßé‡¶™‡¶®‡ßç‡¶® ‡¶π‡ßü‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ß®:<br>‡ß®-‡¶¨‡¶ø‡¶â‡¶ü‡¶æ‡¶á‡¶®‡¶ï‡ßá ‡¶è‡¶ï ‡¶Æ‡ßã‡¶≤ H‚ÇÇ, Lindlar catalyst ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡¶æ‡¶≤‡ßá ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶® ‡¶π‡¶¨‡ßá ‚Äî`,
    options: ["‡¶ï) ‡¶∏‡¶ø‡¶∏-‡ß®-‡¶¨‡¶ø‡¶â‡¶ü‡¶ø‡¶®", "‡¶ñ) ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶∏-‡ß®-‡¶¨‡¶ø‡¶â‡¶ü‡¶ø‡¶®", "‡¶ó) ‡¶¨‡¶ø‡¶â‡¶ü‡ßá‡¶®", "‡¶ò) ‡ßß-‡¶¨‡¶ø‡¶â‡¶ü‡¶ø‡¶®"],
    correct: 0,
    explanation: `üß† ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:<br>Lindlar catalyst ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡¶æ‡¶á‡¶®‡¶ï‡ßá ‡¶Ü‡¶Ç‡¶∂‡¶ø‡¶ï ‡¶π‡¶æ‡¶á‡¶°‡ßç‡¶∞‡ßã‡¶ú‡ßá‡¶®‡ßá‡¶∂‡¶® ‡¶ï‡¶∞‡ßá ‡¶∏‡¶ø‡¶∏-‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡¶ø‡¶® ‡¶â‡ßé‡¶™‡¶®‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ß©:<br>CH‚ÇÉ‚ÄìCH=CH‚ÄìCH‚ÇÉ-‡¶è Br‚ÇÇ, CCl‚ÇÑ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ï‡ßÄ ‡¶π‡¶¨‡ßá?`,
    options: ["‡¶ï) ‡ßß,‡ß®-‡¶°‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡ßã-‡ß©-‡¶¨‡¶ø‡¶â‡¶ü‡ßá‡¶®", "‡¶ñ) ‡ß®,‡ß©-‡¶°‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡ßã-‡¶¨‡¶ø‡¶â‡¶ü‡ßá‡¶®", "‡¶ó) ‡ßß,‡ß™-‡¶°‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡ßã-‡¶¨‡¶ø‡¶â‡¶ü‡ßá‡¶®", "‡¶ò) ‡ßß,‡ß®,‡ß©-‡¶ü‡ßç‡¶∞‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡ßã-‡¶¨‡¶ø‡¶â‡¶ü‡ßá‡¶®"],
    correct: 1,
    explanation: `üß† ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:<br>‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡¶ø‡¶® ‡¶°‡¶æ‡¶¨‡¶≤ ‡¶¨‡¶®‡ßç‡¶°‡ßá ‡¶á‡¶≤‡ßá‡¶ï‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶´‡¶ø‡¶≤‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶ø‡¶∂‡¶® ‡¶ï‡¶∞‡ßá ‚Üí ‡ß®,‡ß©-‡¶°‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡ßã-‡¶¨‡¶ø‡¶â‡¶ü‡ßá‡¶®‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ß™:<br>HC‚â°C‚ÄìCH‚ÇÇ‚ÄìCH‚ÇÉ-‡¶ï‡ßá NaNH‚ÇÇ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡¶æ‡¶≤‡ßá ‡¶ï‡ßÄ ‡¶π‡¶¨‡ßá?`,
    options: ["‡¶ï) ‡¶è‡¶≤‡ßç‡¶ï‡¶æ‡¶á‡¶® ‡¶Ü‡ßü‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶¨‡ßá", "‡¶ñ) ‡¶∏‡¶æ‡¶á‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶Ø‡ßå‡¶ó ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶¨‡ßá", "‡¶ó) ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶π‡¶¨‡ßá ‡¶®‡¶æ", "‡¶ò) ‡¶è‡¶≤‡¶ï‡ßá‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶¨‡ßá"],
    correct: 0,
    explanation: `üß† ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:<br>NaNH‚ÇÇ ‡¶∂‡¶ï‡ßç‡¶§‡¶ø‡¶∂‡¶æ‡¶≤‡ßÄ ‡¶¨‡ßá‡¶∏, ‡¶ü‡¶æ‡¶∞‡ßç‡¶Æ‡¶ø‡¶®‡¶æ‡¶≤ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡¶æ‡¶á‡¶®‡ßá‡¶∞ ‡¶è‡¶∏‡¶ø‡¶°‡¶ø‡¶ï ‡¶π‡¶æ‡¶á‡¶°‡ßç‡¶∞‡ßã‡¶ú‡ßá‡¶® ‡¶Ö‡¶™‡¶∏‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßá ‚Üí ‡¶è‡¶≤‡ßç‡¶ï‡¶æ‡¶á‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶Ø‡¶º‡¶®‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ß´:<br>‡¶¨‡ßá‡¶®‡¶ú‡¶ø‡¶® ‚Üí (CH‚ÇÉCl, AlCl‚ÇÉ) ‚Üí (KMnO‚ÇÑ, heat) ‚Üí (SOCl‚ÇÇ) ‚Üí (NH‚ÇÉ, heat)<br>‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶® ‚Äî`,
    options: ["‡¶ï) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶≤‡¶ø‡¶®", "‡¶ñ) ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶æ‡¶Æ‡¶æ‡¶á‡¶°", "‡¶ó) ‡¶ü‡¶≤‡ßÅ‡¶á‡¶®", "‡¶ò) ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶Ø‡¶º‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶°"],
    correct: 1,
    explanation: `üß† ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:<br>
    Step 1: Benzene ‚Üí CH‚ÇÉCl, AlCl‚ÇÉ ‚Üí ‡¶ü‡¶≤‡ßÅ‡¶á‡¶®<br>
    Step 2: KMnO‚ÇÑ ‚Üí ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶Ø‡¶º‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶°<br>
    Step 3: SOCl‚ÇÇ ‚Üí ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶Ø‡¶º‡ßá‡¶≤ ‡¶ï‡ßç‡¶≤‡ßã‡¶∞‡¶æ‡¶á‡¶°<br>
    Step 4: NH‚ÇÉ ‚Üí ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶æ‡¶Æ‡¶æ‡¶á‡¶°‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ß¨:<br>HC‚â°CH ‚Üí (NaNH‚ÇÇ) ‚Üí (CH‚ÇÉ‚ÄìCH‚ÇÇ‚ÄìBr) ‚Üí (O‚ÇÉ, Zn/H‚ÇÇO)<br>‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶® ‡¶π‡¶¨‡ßá ‚Äî`,
    options: ["‡¶ï) ‡¶™‡ßç‡¶∞‡ßã‡¶™‡¶æ‡¶®‡¶æ‡¶≤", "‡¶ñ) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶ü‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶° ‡¶ì ‡¶´‡¶∞‡ßç‡¶Æ‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶°", "‡¶ó) ‡¶¨‡ßÅ‡¶ü‡¶æ‡¶®-‡ß®-‡¶ì‡¶®", "‡¶ò) ‡¶™‡ßç‡¶∞‡ßã‡¶™‡¶æ‡¶®‡ßã‡¶® ‡¶ì ‡¶´‡¶∞‡ßç‡¶Æ‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°"],
    correct: 3,
    explanation: `üß† ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:<br>
    Step 1: NaNH‚ÇÇ ‚Üí ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶ü‡¶æ‡¶á‡¶≤‡¶æ‡¶á‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶Ø‡¶º‡¶® ‡¶§‡ßà‡¶∞‡¶ø<br>
    Step 2: CH‚ÇÉ‚ÄìCH‚ÇÇ‚ÄìBr ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá SN2 ‚Üí ‡¶™‡ßá‡¶®‡ßç‡¶ü-‡ßß-‡¶á‡¶®<br>
    Step 3: O‚ÇÉ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶ì‡¶ú‡ßã‡¶®‡ßã‡¶≤‡¶æ‡¶á‡¶∏‡¶ø‡¶∏ ‚Üí ‡¶¶‡ßÅ‡¶á ‡¶ü‡ßÅ‡¶ï‡¶∞‡¶æ ‚Üí ‡¶™‡ßç‡¶∞‡ßã‡¶™‡¶æ‡¶®‡ßã‡¶® + ‡¶´‡¶∞‡ßç‡¶Æ‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ß≠:<br>C‚ÇÜH‚ÇÖ‚ÄìCH‚ÇÇOH ‚Üí (K‚ÇÇCr‚ÇÇO‚Çá/H‚ÇÇSO‚ÇÑ) ‚Üí (SOCl‚ÇÇ) ‚Üí (NH‚ÇÉ)<br>‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶® ‚Äî`,
    options: ["‡¶ï) ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶Ø‡¶º‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶°", "‡¶ñ) ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶æ‡¶Æ‡¶æ‡¶á‡¶°", "‡¶ó) ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶Ø‡¶º‡ßá‡¶≤ ‡¶ï‡ßç‡¶≤‡ßã‡¶∞‡¶æ‡¶á‡¶°", "‡¶ò) ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°"],
    correct: 1,
    explanation: `üß† ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:<br>
    Step 1: Oxidation ‚Üí ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶Ø‡¶º‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶°<br>
    Step 2: SOCl‚ÇÇ ‚Üí ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶Ø‡¶º‡ßá‡¶≤ ‡¶ï‡ßç‡¶≤‡ßã‡¶∞‡¶æ‡¶á‡¶°<br>
    Step 3: NH‚ÇÉ ‚Üí ‡¶¨‡ßá‡¶û‡ßç‡¶ú‡¶æ‡¶Æ‡¶æ‡¶á‡¶°‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßÆ:<br>CH‚ÇÉ‚ÄìCH=CH‚ÄìCH‚ÇÇ‚ÄìBr ‚Üí (NaNH‚ÇÇ) ‚Üí (H‚ÇÇO)<br>‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶® ‚Äî`,
    options: ["‡¶ï) ‡¶™‡ßç‡¶∞‡ßã‡¶™‡¶æ‡¶á‡¶®", "‡¶ñ) ‡¶¨‡¶ø‡¶â‡¶ü‡¶æ‡¶á‡¶®", "‡¶ó) ‡¶™‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶á‡¶®", "‡¶ò) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®"],
    correct: 1,
    explanation: `üß† ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:<br>Elimination ‚Üí ‡¶°‡¶æ‡¶¨‡¶≤ ‡¶è‡¶≤‡¶ø‡¶Æ‡¶ø‡¶®‡ßá‡¶∂‡¶® ‚Üí ‡¶¨‡¶ø‡¶â‡¶ü‡¶æ‡¶á‡¶®‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßØ:<br>‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶° ‡¶ì ‡¶ï‡ßá‡¶ü‡ßã‡¶® ‡¶Æ‡¶ø‡¶∂‡ßç‡¶∞‡¶£‡ßá 2,4-DNP ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶Ø‡¶º ‡¶è‡¶ï‡¶ü‡¶ø ‡¶π‡¶≤‡ßÅ‡¶¶ ‡¶§‡¶≤‡¶æ‡¶®‡¶ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶ó‡ßá‡¶≤‡•§ ‡¶è‡¶∞‡¶™‡¶∞‡ßá ‡¶∏‡ßá‡¶á ‡¶Ø‡ßå‡¶ó‡¶ü‡¶ø ‡¶∏‡ßã‡¶°‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶¨‡¶ø‡¶∏‡¶æ‡¶≤‡¶´‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶Ø‡¶º ‡¶Ö‡¶Ç‡¶∂ ‡¶®‡¶ø‡¶≤ ‡¶®‡¶æ‡•§ ‡¶Ø‡ßå‡¶ó‡¶ü‡¶ø ‡¶ï‡ßÄ ‡¶π‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá?`,
    options: ["‡¶ï) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶ü‡ßã‡¶®", "‡¶ñ) ‡¶¨‡ßá‡¶®‡¶ú‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°", "‡¶ó) ‡¶™‡ßç‡¶∞‡ßã‡¶™‡¶æ‡¶®‡ßã‡¶®", "‡¶ò) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶ü‡ßã‡¶´‡ßá‡¶®‡¶®"],
    correct: 3,
    explanation: `üß† ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:<br>
    2,4-DNP ‚Üí ‡¶∏‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶° ‡¶ì ‡¶ï‡ßá‡¶ü‡ßã‡¶®‡ßá ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá‡•§<br>
    ‡¶∏‡ßã‡¶°‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶¨‡¶ø‡¶∏‡¶æ‡¶≤‡¶´‡¶æ‡¶á‡¶ü ‚Üí ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶õ‡ßã‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°‡ßá ‡¶∏‡¶π‡¶ú‡ßá ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ú‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º‡•§<br>
    ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶ü‡ßã‡¶´‡ßá‡¶®‡¶® (‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∞‡ßã‡¶Æ‡ßá‡¶ü‡¶ø‡¶ï ‡¶ï‡ßá‡¶ü‡ßã‡¶®) ‡¶¨‡¶ø‡¶∏‡¶æ‡¶≤‡¶´‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø‡¶∂‡ßÄ‡¶≤ ‡¶Ø‡ßã‡¶ó‡¶´‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡•§<br>
    ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:<br>‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∞‡ßã‡¶Æ‡ßá‡¶ü‡¶ø‡¶ï ‡¶ï‡ßá‡¶ü‡ßã‡¶®‡ßá ‡¶ï‡¶æ‡¶∞‡ßç‡¶¨‡¶®‡¶æ‡¶á‡¶≤ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ ‡¶á‡¶≤‡ßá‡¶ï‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶´‡¶ø‡¶≤‡¶ø‡¶∏‡¶ø‡¶ü‡¶ø ‡¶ï‡¶Æ, ‡¶´‡¶≤‡ßá ‡¶¨‡¶ø‡¶∏‡¶æ‡¶≤‡¶´‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶®‡¶ø‡¶â‡¶ï‡ßç‡¶≤‡¶ø‡¶ì‡¶´‡¶ø‡¶≤‡¶ø‡¶ï ‡¶Ü‡¶ï‡ßç‡¶∞‡¶Æ‡¶£ ‡¶ï‡¶†‡¶ø‡¶® ‡¶π‡¶Ø‡¶º‡•§`,
  },

 {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßß‡ß¶:<br>R-CONH‚ÇÇ + Br‚ÇÇ + KOH‚Üí 'X' (‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶â‡ßé‡¶™‡¶æ‡¶¶) X' ‡¶Ø‡ßå‡¶ó‡¶ü‡¶ø ‡¶ï‡ßÄ?`,
    options: ["(a) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßã‡¶π‡¶≤", "(b) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡¶ø‡¶®", "(c) ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°", "(d) ‡¶á‡¶•‡¶æ‡¶∞"],
    correct: 1,
    explanation: `üß† ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:<br>‡¶è‡¶á ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶ü‡¶ø ‡¶π‡¶´‡¶Æ‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡ßç‡¶∑‡ßÅ‡¶¶‡ßç‡¶∞‡¶æ‡¶Ç‡¶∂‡¶ï‡¶∞‡¶£ ‡¶®‡¶æ‡¶Æ‡ßá ‡¶™‡¶∞‡¶ø‡¶ö‡¶ø‡¶§, ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡¶æ‡¶á‡¶° (R-CONH‚ÇÇ) ‡¶¨‡ßç‡¶∞‡ßã‡¶Æ‡¶ø‡¶® (Br‚ÇÇ) ‡¶è‡¶¨‡¶Ç ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ (KOH) ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡¶ø‡¶® (R-NH‚ÇÇ) ‡¶ó‡¶†‡¶® ‡¶ï‡¶∞‡ßá‡•§<br>‡¶∏‡ßÅ‡¶§‡¶∞‡¶æ‡¶Ç, 'X' ‡¶Ø‡ßå‡¶ó‡¶ü‡¶ø ‡¶π‡¶≤‡ßã: ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡¶ø‡¶®‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßß‡ßß:<br>‡¶ó‡ßç‡¶≤‡¶ø‡¶∏‡¶æ‡¶∞‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°‡ßá ‡¶ï‡¶æ‡¶á‡¶∞‡¶æ‡¶≤ ‡¶ï‡¶æ‡¶∞‡ßç‡¶¨‡¶® ‡¶ï‡ßü‡¶ü‡¶ø?`,
    options: ["(a) 1 ‡¶ü‡¶ø", "(b) 2 ‡¶ü‡¶ø", "(c) 3 ‡¶ü‡¶ø", "(d) 4 ‡¶ü‡¶ø"],
    correct: 0,
    explanation: `üß† ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:<br>‡¶ó‡ßç‡¶≤‡¶ø‡¶∏‡¶æ‡¶∞‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶æ‡¶á‡¶∞‡¶æ‡¶≤ ‡¶ï‡¶æ‡¶∞‡ßç‡¶¨‡¶® ‡¶™‡¶∞‡¶Æ‡¶æ‡¶£‡ßÅ ‡¶•‡¶æ‡¶ï‡ßá‡•§ ‡¶è‡¶ü‡¶ø ‡¶π‡¶≤ ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü ‡¶ï‡¶æ‡¶∞‡ßç‡¶¨‡¶®, ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶•‡¶æ‡¶ï‡ßá‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßß‡ß®:<br>‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶°-‡¶´‡ßá‡¶π‡¶≤‡¶ø‡¶Ç ‡¶¶‡ßç‡¶∞‡¶¨‡¶£ ‡¶≤‡¶æ‡¶≤ ‡¶Ö‡¶ß‡¶É‡¶ï‡ßç‡¶∑‡ßá‡¶™; ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ‡¶ü‡¶ø--`,
    options: ["(a) ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶® ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ", "(b) ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ú‡¶® ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ", "(c) ‡¶ú‡¶æ‡¶∞‡¶£-‡¶¨‡¶ø‡¶ú‡¶æ‡¶∞‡¶£ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ", "(d) ‡¶Ö‡¶™‡¶∏‡¶æ‡¶∞‡¶£ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ"],
    correct: 2,
    explanation: `üß† ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:<br>‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶°‡¶ø‡¶π‡¶æ‡¶á‡¶° ‡¶Ø‡¶ñ‡¶® ‡¶´‡ßá‡¶π‡¶≤‡¶ø‡¶Ç ‡¶¶‡ßç‡¶∞‡¶¨‡¶£‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá, ‡¶§‡¶ñ‡¶® ‡¶≤‡¶æ‡¶≤ ‡¶∞‡¶ô‡ßá‡¶∞ ‡¶Ö‡¶ß‡¶É‡¶ï‡ßç‡¶∑‡ßá‡¶™ (Cu‚ÇÇO) ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶Ø‡¶º‡•§ ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ú‡¶æ‡¶∞‡¶£-‡¶¨‡¶ø‡¶ú‡¶æ‡¶∞‡¶£ (redox) ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßß‡ß©:<br>‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶Æ‡¶æ‡¶∞‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡¶ø‡¶® ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§‡¶ï‡¶∞‡¶£‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡ßü-`,
    options: ["(a) CHCl‚ÇÉ, KOH", "(b) Br‚ÇÇ+ KOH", "(c) Cu(OH)‚ÇÇ+ NaOH", "(d) KMnO‚ÇÑ, KOH"],
    correct: 0,
    explanation: `üß† ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:<br>‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶Æ‡¶æ‡¶∞‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡¶ø‡¶® ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§‡¶ï‡¶∞‡¶£‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶¨‡¶ø‡¶≤ ‡¶Ü‡¶Æ‡¶ø‡¶® ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡¶Ø‡¶º, ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá CHCl‚ÇÉ ‡¶è‡¶¨‡¶Ç KOH ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßß‡ß™:<br>‡¶ï‡ßã‡¶® ‡¶Ø‡ßå‡¶ó‡¶ü‡¶ø ‡¶ü‡¶ü‡ßã‡¶Æ‡¶æ‡¶∞‡¶ø‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶® ‡¶ï‡¶∞‡ßá?`,
    options: ["(a) ‡¶¨‡¶ø‡¶â‡¶ü-‡ß®-‡¶á‡¶®", "(b) ‡¶°‡¶æ‡¶á ‡¶á‡¶•‡¶æ‡¶á‡¶≤ ‡¶á‡¶•‡¶æ‡¶∞", "(c) ‡¶™‡ßç‡¶∞‡ßã‡¶™‡¶æ‡¶®‡ßã‡¶®", "(d) ‡¶á‡¶•‡¶æ‡¶®‡ßç‡¶Ø‡¶æ‡¶≤"],
    correct: 2,
    explanation: `üß† ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:<br>‡¶™‡ßç‡¶∞‡ßã‡¶™‡¶æ‡¶®‡ßã‡¶® ‡¶ï‡¶ø‡¶ü‡ßã-‡¶á‡¶®‡¶≤ ‡¶ü‡¶ü‡ßã‡¶Æ‡¶æ‡¶∞‡¶ø‡¶ú‡¶Æ ‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶® ‡¶ï‡¶∞‡ßá‡•§`,
  },
  {
    q: `‚úÖ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡ßß‡ß´:<br>C-C ‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶¶‡ßÇ‡¶∞‡¶§‡ßç‡¶¨ ‡¶ï‡¶§ nm?`,
    options: ["(a) 0.154", "(b) 0.153", "(c) 0.156", "(d) 0.110"],
    correct: 0,
    explanation: `üß† ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:<br>‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£‡¶§ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßá‡¶®‡ßá‡¶∞ C-C ‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶¶‡ßÇ‡¶∞‡¶§‡ßç‡¶¨ 0.154 nm‡•§`,
  },
];


window.startExam = function() {
  userName = document.getElementById("nameInput").value.trim();
  if (!userName) return alert("Please enter your name.");
  document.getElementById("startSound").play();
  startTime = new Date();
  nameEntry.style.display = "none";
  examContainer.style.display = "block";
  renderQuestions();
  startTimer();
};

function startTimer() {
  timerInterval = setInterval(() => {
    let minutes = Math.floor(timerDuration / 60);
    let seconds = timerDuration % 60;
    timerElement.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;

    if (timerDuration <= 15) timerElement.classList.add("shake");
    if (timerDuration <= 5 && timerDuration > 0) document.getElementById("countdownSound").play();
    if (timerDuration === 0) {
      document.getElementById("bellSound").play();
      clearInterval(timerInterval);
      submitExam();
      alert("‚è∞ Time is up!");
    }
    timerDuration--;
  }, 1000);
}

function renderQuestions() {
  const examDiv = document.getElementById("exam");
  examDiv.innerHTML = "";
  questions.forEach((question, index) => {
    const qBox = document.createElement("div");
    qBox.className = "question-box";
    qBox.innerHTML = `
      <p><strong>Q${index + 1}:</strong> ${question.q}</p>
      <div class="options">
        ${question.options.map((opt, i) => `<label><input type="radio" name="q${index}" value="${i}"> ${opt}</label>`).join('')}
      </div>
      <div id="feedback${index}"></div>
    `;
    examDiv.appendChild(qBox);
  });
  MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
}

window.submitExam = function() {
  clearInterval(timerInterval);
  const submitBtn = document.querySelector("button[onclick='submitExam()']");
  if (submitBtn) { submitBtn.disabled = true; submitBtn.innerText = "Submitted"; }

  let score = 0, correctCount = 0, wrongCount = 0;

  questions.forEach((q, i) => {
    const selected = document.querySelector(`input[name='q${i}']:checked`);
    const feedback = document.getElementById(`feedback${i}`);
    if (!selected) {
      feedback.innerHTML = `<p class='incorrect'>‚ùå ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø‡•§</p><div class='explanation'>‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞: ${q.options[q.correct]}<br>${q.explanation}</div>`;
      return;
    }
    const ans = parseInt(selected.value);
    if (ans === q.correct) {
      score++;
      correctCount++;
      feedback.innerHTML = `<p class='correct'>‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞!</p><div class='explanation'>${q.explanation}</div>`;
    } else {
      score -= 0.25;
      wrongCount++;
      feedback.innerHTML = `<p class='incorrect'>‚ùå ‡¶≠‡ßÅ‡¶≤ ‡¶â‡¶§‡ßç‡¶§‡¶∞‡•§</p><div class='explanation'>‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞: ${q.options[q.correct]}<br>${q.explanation}</div>`;
    }
  });

  const timeTaken = Math.floor((new Date() - startTime) / 1000);
  document.getElementById("resultBox").innerHTML = `
    <h3>üìä ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶´‡¶≤‡¶æ‡¶´‡¶≤</h3>
    <p><strong>üë§ ‡¶®‡¶æ‡¶Æ:</strong> ${userName}</p>
    <p><strong>‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞:</strong> ${correctCount}</p>
    <p><strong>‚ùå ‡¶≠‡ßÅ‡¶≤ ‡¶â‡¶§‡ßç‡¶§‡¶∞:</strong> ${wrongCount}</p>
    <p><strong>üî¢ ‡¶∏‡ßç‡¶ï‡ßã‡¶∞:</strong> ${score.toFixed(2)} out of ${questions.length}</p>
    <p><strong>‚è± ‡¶∏‡¶Æ‡ßü:</strong> ${Math.floor(timeTaken / 60)} ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ${timeTaken % 60} ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°</p>
  `;

  const resultData = {
    name: userName,
    score: score.toFixed(2),
    correct: correctCount,
    wrong: wrongCount,
    totalQuestions: questions.length,
    timeTaken: `${Math.floor(timeTaken / 60)}m ${timeTaken % 60}s`,
    timestamp: new Date().toISOString()
  };

  const examRef = ref(db, 'vector_exam_results/');
  push(examRef, resultData)
    .then(() => console.log("‚úÖ Result saved successfully!"))
    .catch((err) => console.error("‚ùå Error saving result:", err));

  MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
};
</script>
</body>
</html>


